<!DOCTYPE html>

<html lang="en">

<head>

    <meta charset="UTF-8">

    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Edit Catering Quote - Nutmeg Creole Kitchen</title>

    <style>

        body {

            font-family: Arial, sans-serif;

            max-width: 800px;

            margin: 0 auto;

            padding: 20px;

            background-color: #f5f5f5;

        }

        .container {

            background: white;

            padding: 30px;

            border-radius: 10px;

            box-shadow: 0 2px 10px rgba(0,0,0,0.1);

        }

        .header {

            text-align: center;

            margin-bottom: 30px;

            padding-bottom: 20px;

            border-bottom: 3px solid #2c5aa0;

        }

        .form-group {

            margin-bottom: 20px;

        }

        label {

            display: block;

            margin-bottom: 5px;

            font-weight: bold;

            color: #333;

        }

        input, select, textarea {

            width: 100%;

            padding: 10px;

            border: 1px solid #ddd;

            border-radius: 5px;

            font-size: 16px;

            box-sizing: border-box;

        }

        .menu-item {

            background: #f9f9f9;

            padding: 15px;

            margin: 10px 0;

            border-radius: 5px;

            border: 1px solid #e0e0e0;

        }

        .menu-item-row {

            display: grid;

            grid-template-columns: 2fr 1fr 1fr 1fr auto;

            gap: 10px;

            align-items: center;

        }

        .btn {

            padding: 12px 25px;

            border: none;

            border-radius: 5px;

            cursor: pointer;

            font-size: 16px;

            margin: 5px;

        }

        .btn-approve {

            background: #28a745;

            color: white;

        }

        .btn-reject {

            background: #dc3545;

            color: white;

        }

        .btn-add {

            background: #007bff;

            color: white;

        }

        .btn-remove {

            background: #dc3545;

            color: white;

            padding: 5px 10px;

        }

        .totals {

            background: #e9ecef;

            padding: 20px;

            border-radius: 5px;

            margin: 20px 0;

        }

        .loading {

            text-align: center;

            padding: 50px;

        }

        .error {

            background: #f8d7da;

            color: #721c24;

            padding: 15px;

            border-radius: 5px;

            margin: 20px 0;

        }

        .success {

            background: #d4edda;

            color: #155724;

            padding: 15px;

            border-radius: 5px;

            margin: 20px 0;

        }

        @media (max-width: 768px) {

            .menu-item-row {

                grid-template-columns: 1fr;

                gap: 5px;

            }

        }

    </style>

</head>

<body>

    <div class="container">

        <div class="header">

            <h1>Catering Quote Management</h1>

            <h2>Nutmeg Creole Kitchen</h2>

        </div>



        <div id="loading" class="loading">

            <p>Loading quote data...</p>

        </div>



        <div id="error-message" class="error" style="display: none;"></div>

        <div id="success-message" class="success" style="display: none;"></div>



        <form id="quote-form" style="display: none;">

            <input type="hidden" id="request_id" name="request_id">

            <input type="hidden" id="secure_token" name="secure_token">



            <h3>Customer Information</h3>

            <div class="form-group">

                <label for="customer_name">Customer Name:</label>

                <input type="text" id="customer_name" name="customer_name" readonly>

            </div>

            <div class="form-group">

                <label for="customer_email">Email:</label>

                <input type="email" id="customer_email" name="customer_email" readonly>

            </div>

            <div class="form-group">

                <label for="customer_phone">Phone:</label>

                <input type="tel" id="customer_phone" name="customer_phone" readonly>

            </div>



            <h3>Event Details</h3>

            <div class="form-group">

                <label for="event_date">Event Date:</label>

                <input type="date" id="event_date" name="event_date">

            </div>

            <div class="form-group">

                <label for="event_time">Event Time:</label>

                <input type="time" id="event_time" name="event_time">

            </div>

            <div class="form-group">

                <label for="catering_type">Service Type:</label>

                <select id="catering_type" name="catering_type">

                    <option value="delivery">Delivery</option>

                    <option value="pickup">Pickup</option>

                    <option value="full-service">Full Service</option>

                </select>

            </div>



            <h3>Address (if delivery/full-service)</h3>

            <div class="form-group">

                <label for="street_address">Street Address:</label>

                <input type="text" id="street_address" name="street_address">

            </div>

            <div class="form-group">

                <label for="city">City:</label>

                <input type="text" id="city" name="city">

            </div>

            <div class="form-group">

                <label for="postal_code">Postal Code:</label>

                <input type="text" id="postal_code" name="postal_code">

            </div>



            <h3>Menu Items</h3>

            <div id="menu-items-container">

                <!-- Menu items will be loaded here -->

            </div>

            <button type="button" class="btn btn-add" onclick="addMenuItem()">+ Add Menu Item</button>



            <div class="totals">

                <div><strong>Subtotal: $<span id="subtotal">0.00</span></strong></div>

                <div><strong>Tax (13%): $<span id="tax">0.00</span></strong></div>

                <div style="font-size: 1.2em; margin-top: 10px;"><strong>Total: $<span id="total">0.00</span></strong></div>

            </div>



            <h3>Special Instructions</h3>

            <div class="form-group">

                <label for="special_instructions">Special Instructions:</label>

                <textarea id="special_instructions" name="special_instructions" rows="4"></textarea>

            </div>

            <div class="form-group">

                <label for="allergies">Allergies/Dietary Restrictions:</label>

                <input type="text" id="allergies" name="allergies">

            </div>



            <div style="text-align: center; margin-top: 30px;">

                <button type="button" class="btn btn-approve" onclick="approveQuote()">✅ Approve Quote</button>

                <button type="button" class="btn btn-reject" onclick="rejectQuote()">❌ Reject Quote</button>

            </div>

        </form>

    </div>



    <script>

        let quoteData = {};

        

        // Get URL parameters

        function getUrlParameter(name) {

            name = name.replace(/[\[]/, '\\[').replace(/[\]]/, '\\]');

            const regex = new RegExp('[\\?&]' + name + '=([^&#]*)');

            const results = regex.exec(location.search);

            return results === null ? '' : decodeURIComponent(results[1].replace(/\+/g, ' '));

        }



        // Load quote data on page load

        window.onload = async function() {

            const quoteId = getUrlParameter('id');

            const token = getUrlParameter('token');

            

            if (!quoteId || !token) {

                showError('Invalid quote link. Missing ID or token.');

                return;

            }



            try {

                // REPLACE THIS URL WITH YOUR ACTUAL N8N WEBHOOK URL

                const response = await fetch('https://YOUR-N8N-INSTANCE.com/webhook/get-quote', {

                    method: 'POST',

                    headers: {

                        'Content-Type': 'application/json',

                    },

                    body: JSON.stringify({

                        query: { id: quoteId, token: token }

                    })

                });



                if (!response.ok) {

                    throw new Error('Failed to load quote data');

                }



                quoteData = await response.json();

                populateForm();

                document.getElementById('loading').style.display = 'none';

                document.getElementById('quote-form').style.display = 'block';

                

            } catch (error) {

                showError('Error loading quote: ' + error.message);

            }

        };



        function populateForm() {

            // Populate form fields

            Object.keys(quoteData).forEach(key => {

                const element = document.getElementById(key);

                if (element && quoteData[key] !== undefined) {

                    element.value = quoteData[key];

                }

            });



            // Populate menu items

            if (quoteData.menu_items) {

                const container = document.getElementById('menu-items-container');

                container.innerHTML = '';

                quoteData.menu_items.forEach((item, index) => {

                    addMenuItem(item, index);

                });

            }



            calculateTotals();

        }



        function addMenuItem(item = {}, index = null) {

            const container = document.getElementById('menu-items-container');

            const itemIndex = index !== null ? index : container.children.length;

            

            const menuItem = document.createElement('div');

            menuItem.className = 'menu-item';

            menuItem.innerHTML = `

                <div class="menu-item-row">

                    <input type="text" placeholder="Item Name" value="${item.name || ''}" onchange="calculateTotals()" data-field="name" data-index="${itemIndex}">

                    <input type="number" placeholder="Qty" value="${item.quantity || 1}" min="1" onchange="calculateTotals()" data-field="quantity" data-index="${itemIndex}">

                    <input type="number" placeholder="Price" value="${item.price || 0}" min="0" step="0.01" onchange="calculateTotals()" data-field="price" data-index="${itemIndex}">

                    <span class="item-total">$${((item.quantity || 1) * (item.price || 0)).toFixed(2)}</span>

                    <button type="button" class="btn-remove" onclick="removeMenuItem(this)">Remove</button>

                </div>

            `;

            container.appendChild(menuItem);

            calculateTotals();

        }



        function removeMenuItem(button) {

            button.closest('.menu-item').remove();

            calculateTotals();

        }



        function calculateTotals() {

            let subtotal = 0;

            const menuItems = [];

            

            document.querySelectorAll('.menu-item').forEach((item, index) => {

                const name = item.querySelector('[data-field="name"]').value;

                const quantity = parseInt(item.querySelector('[data-field="quantity"]').value) || 0;

                const price = parseFloat(item.querySelector('[data-field="price"]').value) || 0;

                const total = quantity * price;

                

                item.querySelector('.item-total').textContent = `$${total.toFixed(2)}`;

                subtotal += total;

                

                if (name) {

                    menuItems.push({ name, quantity, price, total: total.toFixed(2) });

                }

            });



            const tax = subtotal * 0.13;

            const finalTotal = subtotal + tax;



            document.getElementById('subtotal').textContent = subtotal.toFixed(2);

            document.getElementById('tax').textContent = tax.toFixed(2);

            document.getElementById('total').textContent = finalTotal.toFixed(2);

            

            // Update quoteData

            quoteData.menu_items = menuItems;

            quoteData.subtotal = subtotal.toFixed(2);

            quoteData.tax_amount = tax.toFixed(2);

            quoteData.final_total = finalTotal.toFixed(2);

        }



        async function approveQuote() {

            try {

                // Collect all form data

                const formData = new FormData(document.getElementById('quote-form'));

                const approvedData = Object.fromEntries(formData);

                

                // Add menu items and calculated totals

                approvedData.menu_items = quoteData.menu_items;

                approvedData.subtotal = quoteData.subtotal;

                approvedData.tax_amount = quoteData.tax_amount;

                approvedData.final_total = quoteData.final_total;



                // REPLACE THIS URL WITH YOUR ACTUAL N8N WEBHOOK URL

                const response = await fetch('https://YOUR-N8N-INSTANCE.com/webhook/approve-quote', {

                    method: 'POST',

                    headers: {

                        'Content-Type': 'application/json',

                    },

                    body: JSON.stringify(approvedData)

                });



                if (!response.ok) {

                    throw new Error('Failed to approve quote');

                }



                showSuccess('Quote approved successfully! Customer has been notified.');

                document.getElementById('quote-form').style.display = 'none';

                

            } catch (error) {

                showError('Error approving quote: ' + error.message);

            }

        }



        async function rejectQuote() {

            if (confirm('Are you sure you want to reject this quote?')) {

                showSuccess('Quote rejected. You can contact the customer directly if needed.');

                document.getElementById('quote-form').style.display = 'none';

            }

        }



        function showError(message) {

            document.getElementById('loading').style.display = 'none';

            document.getElementById('error-message').textContent = message;

            document.getElementById('error-message').style.display = 'block';

        }



        function showSuccess(message) {

            document.getElementById('success-message').textContent = message;

            document.getElementById('success-message').style.display = 'block';

        }

    </script>

</body>

</html>
